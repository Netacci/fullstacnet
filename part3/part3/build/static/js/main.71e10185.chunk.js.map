{"version":3,"sources":["components/Filter.js","components/Button.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","onChange","type","Button","text","onClick","PersonForm","onSubmit","onChangeName","onChangeNumber","valueName","valueNum","value","Persons","person","name","number","url","axios","get","then","response","data","obj","post","id","delete","put","Notification","message","className","App","useState","persons","setPersons","newName","setName","newNumber","setNumber","search","setSearch","notifyMessage","setNotifyMessage","useEffect","personService","initialData","filteredSearch","filter","toLocaleLowerCase","includes","e","target","preventDefault","addPerson","revName","map","n","addNewNumber","window","confirm","numNew","console","log","setTimeout","catch","err","newPerson","concat","na","l","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71e10185.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Filter = ({ onChange }) => {\r\n  return (\r\n    <div>\r\n      filter shown with: <input onChange={onChange} type='search' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\n\r\nconst Button = ({ type, text, onClick }) => {\r\n  return (\r\n    <>\r\n      <button onClick={onClick} type={type}>\r\n        {text}\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport Button from './Button';\r\n\r\nconst PersonForm = ({\r\n  onSubmit,\r\n  onChangeName,\r\n  onChangeNumber,\r\n  valueName,\r\n  valueNum,\r\n}) => {\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <div>\r\n        name: <input onChange={onChangeName} value={valueName} />\r\n      </div>\r\n      <div>\r\n        number: <input onChange={onChangeNumber} value={valueNum} />\r\n      </div>\r\n      <div>\r\n        <Button type='submit' text='add' />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from 'react';\r\nimport Button from './Button';\r\n\r\nconst Persons = ({ person, onClick }) => {\r\n  return (\r\n    <p>\r\n      {person.name} {person.number}\r\n      <Button type='submit' text='Delete' onClick={onClick} />\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default Persons;\r\n","import axios from 'axios';\r\n\r\nconst url = '/api/persons';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(url);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (obj) => {\r\n  const request = axios.post(url, obj);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst deleteObj = (id) => {\r\n  const request = axios.delete(`${url}/${id}`);\r\n  return request.then((response) => response.data);\r\n};\r\nconst replaceNum = (id, obj) => {\r\n  const request = axios.put(`${url}/${id}`, obj);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { getAll, create, deleteObj, replaceNum };\r\n","import React from 'react';\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <div>\r\n      <p className='notify'>{message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport personService from './services/persons';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setName] = useState('');\n  const [newNumber, setNumber] = useState('');\n  const [search, setSearch] = useState('');\n  const [notifyMessage, setNotifyMessage] = useState(null);\n\n  useEffect(() => {\n    personService.getAll().then((initialData) => {\n      setPersons(initialData);\n    });\n    // axios.get('http://localhost:3001/persons').then((response) => {\n    //   setPersons(response.data);\n    // });\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // creates new object and adds to the array of objects\n    const addPerson = {\n      name: newName,\n      number: newNumber,\n    };\n    const revName = persons.map((person) => person.name);\n    const id = persons\n      .map((person) => (person.name === newName ? person.id : null))\n      .filter((n) => n != null);\n\n    // console.log(id);\n\n    // console.log(revName);\n    const addNewNumber = {\n      name: newName,\n      number: newNumber,\n    };\n\n    // console.log(addNewNumber);\n\n    // eslint-disable-next-line no-unused-expressions\n    revName.includes(newName)\n      ? window.confirm(\n          `${newName} already exists, replace the old number with a new one?`\n        )\n        ? personService\n            .replaceNum(id, addNewNumber)\n            .then((numNew) => {\n              setPersons(\n                persons.map((person) =>\n                  person.name !== newName ? person : numNew\n                )\n              );\n              console.log(numNew);\n              setName('');\n              setNumber('');\n              setNotifyMessage(`${addNewNumber.number} was updated`);\n              setTimeout(() => {\n                setNotifyMessage(null);\n              }, 5000);\n            })\n            .catch((err) => {\n              setNotifyMessage(\n                `${addNewNumber.name} was already removed from the server`\n              );\n              setTimeout(() => {\n                setNotifyMessage(null);\n              }, 5000);\n            })\n        : null\n      : personService\n          .create(addPerson)\n          .then((newPerson) => {\n            setPersons(persons.concat(newPerson));\n            setName('');\n            setNumber('');\n            setNotifyMessage(`Added ${newPerson.name}`);\n            setTimeout(() => {\n              setNotifyMessage(null);\n            }, 5000);\n          })\n          .catch((err) => {\n            console.log(`we don't know add person error`, err.response.data);\n          });\n  };\n  // console.log(persons);\n  // sets name state to value of name input\n  const handleChangeName = (e) => {\n    setName(e.target.value);\n  };\n  // sets number state to value of number input\n  const handleChangeNumber = (e) => {\n    setNumber(e.target.value);\n  };\n  // sets seacrh state to value of input\n  const handleSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  // checks to see if person array includes search phrase and returns it\n  const filteredSearch = persons.filter((person) =>\n    person.name.toLocaleLowerCase().includes(search.toLocaleLowerCase())\n  );\n\n  const handleDelete = (id, na) => {\n    // eslint-disable-next-line no-unused-expressions\n    window.confirm(`Delete ${na} from phonebook ?`)\n      ? personService.deleteObj(id).then(() => {\n          setPersons(\n            persons.filter((l) => {\n              return l.id !== id;\n            })\n          );\n          setNotifyMessage(`Deleted ${na}`);\n          setTimeout(() => {\n            setNotifyMessage(null);\n          }, 5000);\n        })\n      : null;\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      {notifyMessage !== null ? <Notification message={notifyMessage} /> : null}\n      <Filter onChange={handleSearch} />\n      <h2>Add new</h2>\n      <PersonForm\n        onSubmit={handleSubmit}\n        onChangeName={handleChangeName}\n        onChangeNumber={handleChangeNumber}\n        valueName={newName}\n        valueNum={newNumber}\n      />\n      <h2>Numbers</h2>\n      {filteredSearch.map((person) => (\n        <Persons\n          key={person.id}\n          person={person}\n          onClick={() => handleDelete(person.id, person.name)}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}